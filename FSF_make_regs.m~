function FSF_make_regs(subjectlist)
% created by AES 12/6 to make condition regressors for FSF
rootdir='/mindhive/saxelab2/FSF/'
moviedur=120 %note these are off in actualDur FSF behave file
TR=2
condlist={'me', 'so', 'ph', 'fa', 'ob', 'sc','po','me'}

for subj=1:length(subjectlist)
    subject=subjectlist{subj}
    runlist=listbolds('FSF_main', {subject}, 'FSF');
    runlist=runlist{1}
for r=1:length(runlist)
    run=runlist(r);
    bolddir=[rootdir, subject, sprintf('/bold/0%.2d',r)]
    behavefile=[rootdir, 'behavioural/', subject '.FSF_main.' num2str(r) '.mat']
    regfile=[rootdir, 'FSF_video_timecourses.mat']
    b=load(behavefile);
    regfile=load(regfile);
    regmatrix=zeros(b.ips,length(condlist));
for i=1:length(condlist)
    cond=condlist{i};
    reg=zeros(b.ips,1);
    for event = 1:size(b.eventList,1)
        movie=[cond, '_', b.eventList(event,:)];
        onset=round(b.idealOnsets(event))/TR+1;
        offset=onset+moviedur/TR;
        for x =1:length(regfile.videonames)
            if regfile.videonames(x,:)==movie
                vidindex=x;
            end
        end
        %vidindex=find(ismember(regfile.videonames,movie))
        thisvidreg=regfile.condensed(vidindex,:)';
        reg(onset:offset-1)=thisvidreg;
    end
    regmatrix(:,i)=reg;
    reglabels{i}=cond;
    reg_data.(cond)=thisvidreg; %stored redundantly as matrix and structure, but we'll use structure to extract and add to behave file
        
    
end
save([bolddir,'/FSFuserregs.mat'], 'reglabels', 'regmatrix', 'reg_data')
end
end
end